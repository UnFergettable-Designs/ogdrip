# Multi-stage build for OG Drip application

# Stage 1: Build frontend
FROM node:22-slim AS frontend-builder

# Set working directory
WORKDIR /build

# Install pnpm
RUN npm install -g pnpm

# Copy the frontend directory only
COPY frontend/ ./frontend

# Copy package.json and package-lock.json to /build/frontend
COPY frontend/package.json frontend/package-lock.json ./frontend/

# Debug: List contents of the frontend directory
RUN ls -la frontend

# Install dependencies for the frontend
RUN pnpm install --prefix ./frontend

# Build the frontend
RUN pnpm build --prefix ./frontend

# Stage 2: Build backend
FROM golang:1.24-bullseye AS backend-builder

# Create app directory
WORKDIR /build/backend

# Install build dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    libc6-dev \
    pkg-config \
    sqlite3 \
    libsqlite3-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy Go module files first for better caching
COPY backend/go.mod backend/go.sum ./
RUN go mod download && go mod verify

# Copy the rest of the backend source code
COPY backend/ ./

# Build with CGO enabled
RUN CGO_ENABLED=1 go build -v -o ogdrip-backend .

# Stage 3: Runtime image
FROM ubuntu:22.04

# Avoid interactive prompts during apt install
ENV DEBIAN_FRONTEND=noninteractive

# Set working directory
WORKDIR /app

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    chromium-browser \
    libsqlite3-0 \
    curl \
    supervisor \
    && rm -rf /var/lib/apt/lists/*

# Create directories
RUN mkdir -p /app/frontend /app/backend /app/outputs

# Copy frontend build
COPY --from=frontend-builder /build/frontend/dist/ /app/frontend/

COPY --from=frontend-builder /build/frontend/package.json /app/frontend/package.json

# Copy backend binary
COPY --from=backend-builder /build/backend/ogdrip-backend /app/backend/

# Make backend binary executable
RUN chmod +x /app/backend/ogdrip-backend

# Setup supervisord to run both services
COPY docker-build/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Create minimal package.json for frontend
#RUN echo '{"name":"ogdrip-frontend","type":"module","dependencies":{"@sentry/astro":"9.5.0","@sentry/browser":"9.5.0","clsx":"2.1.1","cookie":"0.6.0","mime":"4.0.1"}}' > /app/frontend/package.json

# Install frontend runtime dependencies
RUN cd /app/frontend && \
    pnpm install -P --prefer-offline

# Expose ports
EXPOSE 3000 8888

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD curl -f http://localhost:8888/api/health || exit 1

# Start services
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
