openapi: 3.1.0
info:
  title: OG Drip API
  description: API for generating Open Graph images and meta tags
  version: 1.0.0
  contact:
    name: OG Drip
    url: https://og-drip.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8888
    description: Local development server
  - url: https://api.og-drip.com
    description: Production API server

tags:
  - name: generation
    description: Operations for generating Open Graph assets
  - name: history
    description: Operations for retrieving generation history
  - name: utility
    description: Utility operations like health checks

paths:
  /api/generate:
    post:
      tags:
        - generation
      summary: Generate Open Graph image and meta tags
      description: Creates an Open Graph image and HTML meta tags based on the provided parameters
      operationId: generateOpenGraph
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GenerateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GenerateRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/download-zip:
    get:
      tags:
        - generation
      summary: Download bundled assets as ZIP
      description: Downloads the generated image and HTML files as a ZIP archive
      operationId: downloadZip
      parameters:
        - name: file
          in: query
          description: File to include in the ZIP (can be specified multiple times)
          required: true
          schema:
            type: string
          example: 'abc123_og_image.png'
      responses:
        '200':
          description: Successful operation
          content:
            application/zip:
              schema:
                type: string
                format: binary
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Files not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/history:
    get:
      tags:
        - history
      summary: Get generation history
      description: Retrieves a list of previously generated Open Graph assets
      operationId: getHistory
      parameters:
        - name: limit
          in: query
          description: Maximum number of results to return
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
        - name: offset
          in: query
          description: Number of results to skip for pagination
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoryResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/health:
    get:
      tags:
        - utility
      summary: Check API health
      description: Returns the health status of the API
      operationId: healthCheck
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Open Graph Generator API is running'

components:
  schemas:
    GenerateRequest:
      type: object
      properties:
        url:
          type: string
          description: URL to capture for the Open Graph image
          example: 'https://www.google.com'
        title:
          type: string
          description: Title for the Open Graph image
          example: 'My Awesome Website'
        description:
          type: string
          description: Description for Open Graph meta tags
          example: 'A website with great content and features'
        imageType:
          type: string
          description: Type of image to generate
          enum: [basic, gradient, custom]
          default: basic
          example: 'gradient'
        type:
          type: string
          description: Open Graph type
          enum: [website, article, profile, book]
          default: website
          example: 'website'
        site:
          type: string
          description: Site name for og:site_name
          example: 'My Website'
        targetUrl:
          type: string
          description: Target URL for og:url (defaults to url parameter)
          example: 'https://www.example.com'
        width:
          type: integer
          description: Width of the generated image in pixels
          default: 1200
          minimum: 600
          maximum: 2400
          example: 1200
        height:
          type: integer
          description: Height of the generated image in pixels
          default: 630
          minimum: 315
          maximum: 1260
          example: 630
        twitterCard:
          type: string
          description: Twitter card type
          enum: [summary, summary_large_image, app, player]
          default: summary_large_image
          example: 'summary_large_image'
        quality:
          type: integer
          description: JPEG quality (0-100)
          default: 90
          minimum: 10
          maximum: 100
          example: 90
        wait:
          type: integer
          description: Wait time in milliseconds before capturing the webpage
          default: 2000
          minimum: 0
          maximum: 10000
          example: 2000
        selector:
          type: string
          description: CSS selector to capture specific element
          example: 'body'
      required:
        - url
        - title
        - description

    GenerateResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: 'Open Graph assets generated successfully'
        image_url:
          type: string
          example: 'http://localhost:8888/files/abc123_og_image.png'
        meta_tags_url:
          type: string
          example: 'http://localhost:8888/files/abc123_og_meta.html'
        zip_url:
          type: string
          example: 'http://localhost:8888/api/download-zip?file=abc123_og_image.png&file=abc123_og_meta.html'
        html_content:
          type: string
          example: '<html>...</html>'
        id:
          type: string
          example: 'abc123'

    HistoryResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: 'Generation history retrieved successfully'
        count:
          type: integer
          example: 10
        total:
          type: integer
          example: 42
        generations:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: 'abc123'
              timestamp:
                type: string
                format: date-time
                example: '2023-04-01T12:34:56Z'
              url:
                type: string
                example: 'https://www.example.com'
              title:
                type: string
                example: 'Example Website'
              description:
                type: string
                example: 'An example website for testing'
              image_url:
                type: string
                example: 'http://localhost:8888/files/abc123_og_image.png'
              meta_tags_url:
                type: string
                example: 'http://localhost:8888/files/abc123_og_meta.html'

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: 'An error occurred while processing your request'
        error:
          type: string
          example: 'Invalid input: URL is required'
