version: '3.8'

services:
  ogdrip-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: ogdrip-dev
    ports:
      - "8888:8888"   # Backend API
      - "3000:3000"   # Frontend dev server
      - "24678:24678" # Vite HMR
    environment:
      # Development Configuration
      - NODE_ENV=development
      - GO111MODULE=on
      - GOTOOLCHAIN=local
      
      # Backend Configuration
      - PORT=8888
      - HOST=0.0.0.0
      - BASE_URL=http://localhost:8888
      - PUBLIC_BACKEND_URL=http://localhost:8888
      - BACKEND_URL=http://localhost:8888
      
      # Database
      - DATABASE_PATH=/app/data/ogdrip.db
      
      # Security (development defaults)
      - ADMIN_TOKEN=dev-token-change-in-production
      - CORS_ORIGINS=http://localhost:3000,http://localhost:8888,http://127.0.0.1:3000
      
      # Browser Configuration
      - CHROME_PATH=/usr/bin/chromium
      - BROWSER_TIMEOUT=30
      - MAX_CONCURRENT_GENERATIONS=2
      - DISPLAY=:99
      
      # Development Performance
      - NODE_OPTIONS=--max-old-space-size=2048
      - GOGC=100
      
      # Rate Limiting (relaxed for dev)
      - RATE_LIMIT_REQUESTS=1000
      - RATE_LIMIT_WINDOW=3600
      
      # Debug Configuration
      - LOG_LEVEL=debug
      - DEBUG=ogdrip:*
    
    volumes:
      # Source code mounts for live development
      - ./backend:/app/backend
      - ./frontend:/app/frontend
      - ./shared:/app/shared
      - ./package.json:/app/package.json
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ./pnpm-workspace.yaml:/app/pnpm-workspace.yaml
      - ./turbo.json:/app/turbo.json
      
      # Persistent development data
      - ogdrip_dev_data:/app/data
      - ogdrip_dev_outputs:/app/outputs
      - ogdrip_dev_logs:/app/logs
      
      # Node modules cache
      - ogdrip_dev_node_modules:/app/node_modules
      - ogdrip_dev_frontend_node_modules:/app/frontend/node_modules
      - ogdrip_dev_shared_node_modules:/app/shared/node_modules
    
    networks:
      - ogdrip_dev_network
    
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    
    command: >
      sh -c "
        echo 'Installing dependencies...' &&
        pnpm install &&
        echo 'Starting development servers...' &&
        pnpm dev
      "
    
    labels:
      - "com.ogdrip.service=development"
      - "com.ogdrip.environment=dev"

  # Optional: Standalone database for development
  ogdrip-db-dev:
    image: sqlite:latest
    container_name: ogdrip-db-dev
    volumes:
      - ogdrip_dev_database:/data
    networks:
      - ogdrip_dev_network
    profiles:
      - "database"  # Use with: docker-compose --profile database up

  # Optional: Development proxy/load balancer
  ogdrip-proxy-dev:
    image: nginx:alpine
    container_name: ogdrip-proxy-dev
    ports:
      - "80:80"
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    networks:
      - ogdrip_dev_network
    depends_on:
      - ogdrip-dev
    profiles:
      - "proxy"  # Use with: docker-compose --profile proxy up

networks:
  ogdrip_dev_network:
    driver: bridge
    labels:
      - "com.ogdrip.network=development"

volumes:
  ogdrip_dev_data:
    driver: local
    labels:
      - "com.ogdrip.volume=dev-data"
  
  ogdrip_dev_outputs:
    driver: local
    labels:
      - "com.ogdrip.volume=dev-outputs"
  
  ogdrip_dev_logs:
    driver: local
    labels:
      - "com.ogdrip.volume=dev-logs"
  
  ogdrip_dev_database:
    driver: local
    labels:
      - "com.ogdrip.volume=dev-database"
  
  # Node modules caches for faster rebuilds
  ogdrip_dev_node_modules:
    driver: local
    labels:
      - "com.ogdrip.volume=dev-node-modules"
  
  ogdrip_dev_frontend_node_modules:
    driver: local
    labels:
      - "com.ogdrip.volume=dev-frontend-node-modules"
  
  ogdrip_dev_shared_node_modules:
    driver: local
    labels:
      - "com.ogdrip.volume=dev-shared-node-modules"
