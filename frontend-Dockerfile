FROM node:22-slim

# Note: This base image will be pulled from Docker Hub.
# If you encounter authentication issues, you may need to:
# 1. Login to Docker Hub: docker login
# 2. Or use a local development approach without Docker (see LOCAL_DEPLOYMENT.md)

# Set the working directory
WORKDIR /app

# Install pnpm and serve for static file serving
RUN npm install -g pnpm serve

# Copy key configuration files first (from frontend directory)
COPY frontend/package.json frontend/pnpm-lock.yaml* ./
COPY frontend/tsconfig.json ./
COPY frontend/svelte.config.js ./
COPY frontend/astro.config.mjs ./

# Create necessary directories
RUN mkdir -p src/components src/layouts src/pages src/content src/utils src/test public

# Copy source files with specific attention to content collections
COPY frontend/src/components src/components/
COPY frontend/src/layouts src/layouts/
COPY frontend/src/pages src/pages/
COPY frontend/src/content src/content/
COPY frontend/src/utils src/utils/
COPY frontend/src/test src/test/
COPY frontend/src/env.d.ts src/env.d.ts
COPY frontend/public public/

# Create content collection directories if they don't exist
RUN mkdir -p src/content/backend_docs src/content/frontend_docs

# Install dependencies using pnpm
RUN pnpm install

# Build the static site
RUN pnpm run build

# Create an outputs directory to match the volume mount if it doesn't exist
RUN mkdir -p /app/dist/outputs

# Runtime environment variables
ENV NODE_ENV=production
ENV ASTRO_TELEMETRY_DISABLED=1

# Expose the port
EXPOSE 3000

# Serve the static site
CMD ["serve", "-s", "dist", "-l", "3000"] 